{
  "_args": [
    [
      "@nevermined-io/contracts@0.6.2",
      "/Users/malte/Desktop/development/eth-global/nevermined-demo"
    ]
  ],
  "_from": "@nevermined-io/contracts@0.6.2",
  "_id": "@nevermined-io/contracts@0.6.2",
  "_inBundle": false,
  "_integrity": "sha512-rUvWdsyqgKMoAoWIb9n41NsXJPjc4FJ6SruwZfJrdgdF2+z11aK/qSIHl8hw7VAhoddulnpwZqIk/mi3BJxZDw==",
  "_location": "/@nevermined-io/contracts",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "@nevermined-io/contracts@0.6.2",
    "name": "@nevermined-io/contracts",
    "escapedName": "@nevermined-io%2fcontracts",
    "scope": "@nevermined-io",
    "rawSpec": "0.6.2",
    "saveSpec": null,
    "fetchSpec": "0.6.2"
  },
  "_requiredBy": [
    "/@nevermined-io/nevermined-sdk-js"
  ],
  "_resolved": "https://registry.npmjs.org/@nevermined-io/contracts/-/contracts-0.6.2.tgz",
  "_spec": "0.6.2",
  "_where": "/Users/malte/Desktop/development/eth-global/nevermined-demo",
  "author": {
    "name": "Nevermined"
  },
  "bugs": {
    "url": "https://github.com/nevermined-io/contracts/issues"
  },
  "description": "Nevermined implementation of Ocean Protocol in Solidity",
  "devDependencies": {
    "@nevermined-io/contract-tools": "~0.2.4",
    "@openzeppelin/contracts-upgradeable": "^3.3.0",
    "@openzeppelin/truffle-upgrades": "^1.3.0",
    "@truffle/contract": "~4.3.1",
    "@truffle/hdwallet-provider": "~1.2.0",
    "bignumber.js": "^9.0.0",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "eslint": "^7.0.0",
    "eslint-config-oceanprotocol": "^1.5.0",
    "eslint-plugin-import": "^2.20.2",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-standard": "^4.0.1",
    "glob": "^7.1.4",
    "mathjs": "~7.0.0",
    "prettier": "^2.1.2",
    "solhint": "^3.2.0",
    "solidity-coverage": "^0.7.13",
    "truffle": "^5.1.56",
    "truffle-typings": "^1.0.8",
    "ts-node": "^9.0.0",
    "typescript": "^4.0.5",
    "web3": "1.2.7",
    "web3-provider-engine": "~15.0.3",
    "yargs": "~15.3.1"
  },
  "directories": {
    "doc": "doc",
    "test": "test"
  },
  "files": [
    "artifacts/**/*",
    "doc/**/*",
    "README.md"
  ],
  "homepage": "https://github.com/nevermined-io/contracts#readme",
  "license": "Apache-2.0",
  "main": "README.md",
  "name": "@nevermined-io/contracts",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nevermined-io/contracts.git"
  },
  "resolutions": {
    "@nevermined-io/contract-tools/zos/zos-lib": "2.2.3"
  },
  "scripts": {
    "audit": "npx truffle exec ./scripts/deploy/truffle-wrapper/auditWrapper.js",
    "audit:development": "export NETWORK=development&&npm run audit -- --network development",
    "audit:integration": "export NETWORK=integration&&npm run audit -- --network integration",
    "audit:production": "export NETWORK=production&&npm run audit -- --network production",
    "audit:rinkeby": "export NETWORK=rinkeby&&npm run audit -- --network rinkeby",
    "audit:spree": "export NETWORK=spree&&npm run audit -- --network spree",
    "audit:staging": "export NETWORK=staging&&npm run audit -- --network staging",
    "clean": "npm run clean:build && npm run clean:coverage && npm run clean:zos",
    "clean:build": "rm -rf ./build/ ./artifacts/*.development.json ./artifacts/*.spree.json",
    "clean:coverage": "rm -rf ./coverage/ ./coverageEnv/ ./coverage.json",
    "clean:zos": "rm -rf ./zos.json ./zos.dev-8996.json ./.zos.session ./wallets.json zos/",
    "compile": "truffle compile",
    "deploy": "npx truffle exec ./scripts/deploy/truffle-wrapper/deployContractsWrapper.js",
    "deploy:development": "export NETWORK=development&&npm run deploy -- --network development --testnet true",
    "deploy:integration": "export NETWORK=integration&&npm run deploy -- --network integration",
    "deploy:production": "export NETWORK=production&&npm run deploy -- --network production",
    "deploy:rinkeby": "export NETWORK=rinkeby&&npm run deploy -- --network rinkeby",
    "deploy:spree": "export NETWORK=spree&&npm run deploy -- --network spree --testnet true",
    "deploy:staging": "export NETWORK=staging&&npm run deploy -- --network staging",
    "doc:addresses": "node scripts/contracts/get-addresses.js",
    "doc:contracts": "node scripts/contracts/doc-generator.js",
    "doc:copyright": "scripts/add-spdx.sh",
    "lint": "npm run lint:eslint && npm run lint:ethlint",
    "lint:eslint": "eslint --ignore-path .gitignore --ext .js .",
    "lint:ethlint": "solhint --max-warnings 0 contracts/**/*.sol ",
    "lint:fix": "npm run lint:eslint -- --fix && npm run lint:ethlint -- --fix",
    "security:mythril": "truffle compile && myth -x --truffle --max-depth 12 --outform markdown 2>&1 | tee mythrilReport.md",
    "security:securify": "docker run -v $(pwd):/project chainsecurity/securify -t 2>&1 | tee securifyReport.txt",
    "security:slither": "slither . 2>&1 | tee slitherReport.txt",
    "security:upgradeability": "npm run clean && npm run compile && ./scripts/upgradeability_checks.sh",
    "test": "truffle test",
    "test:cover": "truffle run coverage",
    "test:fast": "truffle test $(find ./test/unit -name '*.*s') $(find ./test/int -name '*.*s')",
    "test:integration": "truffle test $(find ./test/int -name '*.*s')",
    "test:manticore": "./test/verification/manticore/run.sh",
    "test:unit": "truffle test $(find ./test/unit -name '*.*s')",
    "test:upgrade": "truffle test $(find ./test/upgrade -name '*.*s')",
    "upgrade": "npx truffle exec ./scripts/deploy/truffle-wrapper/upgradeContractsWrapper.js",
    "upgrade:development": "export NETWORK=development&&npm run upgrade -- --network development --testnet true",
    "upgrade:integration": "export NETWORK=integration&&npm run upgrade -- --network integration",
    "upgrade:production": "export NETWORK=production&&npm run upgrade -- --network production",
    "upgrade:rinkeby": "export NETWORK=rinkeby&&npm run upgrade -- --network rinkeby",
    "upgrade:spree": "export NETWORK=spree&&npm run upgrade -- --network spree --testnet true",
    "upgrade:staging": "export NETWORK=staging&&npm run upgrade -- --network staging"
  },
  "version": "0.6.2"
}
