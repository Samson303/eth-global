"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Instantiable = exports.generateIntantiableConfigFromConfig = void 0;
const utils_1 = require("./utils");
const Web3Provider_1 = __importDefault(require("./keeper/Web3Provider"));
function generateIntantiableConfigFromConfig(config) {
    const logLevel = typeof config.verbose !== 'number'
        ? config.verbose
            ? utils_1.LogLevel.Log
            : utils_1.LogLevel.None
        : config.verbose;
    return {
        config,
        web3: Web3Provider_1.default.getWeb3(config),
        logger: new utils_1.Logger(logLevel)
    };
}
exports.generateIntantiableConfigFromConfig = generateIntantiableConfigFromConfig;
class Instantiable {
    get nevermined() {
        if (!this._nevermined) {
            this.logger.error('Nevermined instance is not defined.');
        }
        return this._nevermined;
    }
    get web3() {
        if (!this._web3) {
            this.logger.error('Web3 instance is not defined.');
            this.logger.error('Using default instance.');
            return Web3Provider_1.default.getWeb3();
        }
        return this._web3;
    }
    get config() {
        if (!this._config) {
            this.logger.error('Config instance is not defined.');
        }
        return this._config;
    }
    get logger() {
        if (!this._logger) {
            utils_1.LoggerInstance.error('Logger instance is not defined.');
            utils_1.LoggerInstance.error('Using default instance.');
            return utils_1.LoggerInstance;
        }
        return this._logger;
    }
    get instanceConfig() {
        const { nevermined, web3, config, logger } = this;
        return { nevermined, web3, config, logger };
    }
    static getInstance(config) {
        return __awaiter(this, void 0, void 0, function* () {
            utils_1.LoggerInstance.warn('getInstance() methods has needs to be added to child class.');
        });
    }
    static setInstanceConfig(instance, { nevermined, config, web3, logger }) {
        instance._nevermined = nevermined;
        instance._config = config;
        instance._web3 = web3;
        instance._logger = logger;
    }
    setInstanceConfig(config) {
        Instantiable.setInstanceConfig(this, config);
    }
}
exports.Instantiable = Instantiable;
//# sourceMappingURL=Instantiable.abstract.js.map