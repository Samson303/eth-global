"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAssetRewardsFromDDO = exports.getLockRewardTotalAmount = exports.fillConditionsWithDDO = void 0;
const AssetRewards_1 = __importDefault(require("../models/AssetRewards"));
function fillParameterWithDDO(parameter, ddo, assetRewards = new AssetRewards_1.default()) {
    const getValue = name => {
        switch (name) {
            case 'amounts':
                return assetRewards.getAmounts();
            case 'receivers':
                return assetRewards.getReceivers();
            case 'amount':
            case 'price':
                return assetRewards.getTotalPrice();
            case 'assetId':
            case 'documentId':
            case 'documentKeyId':
                return ddo.shortId();
            case 'rewardAddress':
                return ddo.publicKey[0].owner;
        }
        return '';
    };
    const value = getValue(parameter.name.replace(/^_/, ''));
    return Object.assign(Object.assign({}, parameter), { value });
}
function fillConditionsWithDDO(conditions, ddo, assetRewards = new AssetRewards_1.default()) {
    return conditions.map(condition => (Object.assign(Object.assign({}, condition), { parameters: condition.parameters.map(parameter => (Object.assign({}, fillParameterWithDDO(parameter, ddo, assetRewards)))) })));
}
exports.fillConditionsWithDDO = fillConditionsWithDDO;
function findServiceConditionByName(service, name) {
    return service.attributes.serviceAgreementTemplate
        .conditions.find(c => c.name === name);
}
function getLockRewardTotalAmount(ddo, index) {
    try {
        const lockRewardCondition = findServiceConditionByName(ddo.findServiceById(index), 'lockReward');
        return String(lockRewardCondition.parameters.find(p => p.name === '_amount').value);
    }
    catch (error) {
        return "0";
    }
}
exports.getLockRewardTotalAmount = getLockRewardTotalAmount;
function getAssetRewardsFromDDO(ddo, index) {
    try {
        const escrowRewardCondition = findServiceConditionByName(ddo.findServiceById(index), 'escrowReward');
        const amounts = escrowRewardCondition.parameters.find(p => p.name === '_amounts').value;
        const receivers = escrowRewardCondition.parameters.find(p => p.name === '_receivers').value;
        const rewardsMap = new Map();
        let i = 0;
        for (i = 0; i < amounts.length; i++)
            rewardsMap.set(receivers[i], amounts[i]);
        return new AssetRewards_1.default(rewardsMap);
    }
    catch (error) {
        return new AssetRewards_1.default();
    }
}
exports.getAssetRewardsFromDDO = getAssetRewardsFromDDO;
//# sourceMappingURL=DDOHelpers.js.map