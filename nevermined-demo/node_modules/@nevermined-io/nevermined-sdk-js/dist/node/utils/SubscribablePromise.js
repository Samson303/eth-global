"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscribablePromise = void 0;
const SubscribableObserver_1 = require("./SubscribableObserver");
class SubscribablePromise {
    constructor(executor) {
        this.observer = new SubscribableObserver_1.SubscribableObserver();
        this.promise = Object.assign(new Promise((resolve, reject) => {
            setTimeout(() => {
                this.observer.subscribe(undefined, resolve, reject);
            }, 0);
        }), this);
        setTimeout(() => this.init(executor), 1);
    }
    subscribe(onNext) {
        return this.observer.subscribe(onNext);
    }
    next(onNext) {
        this.observer.subscribe(onNext);
        return this;
    }
    then(onfulfilled, onrejected) {
        return Object.assign(this.promise.then(onfulfilled, onrejected), this);
    }
    catch(onrejected) {
        return Object.assign(this.promise.catch(onrejected), this);
    }
    finally(onfinally) {
        return Object.assign(this.promise.finally(onfinally), this);
    }
    init(executor) {
        const execution = executor(this.observer);
        const e = execution;
        Promise.resolve(e)
            .then((result) => {
            if (e && e.then) {
                this.observer.complete(result);
            }
        })
            .catch((err) => {
            if (e && e.then) {
                this.observer.error(err);
            }
        });
    }
}
exports.SubscribablePromise = SubscribablePromise;
//# sourceMappingURL=SubscribablePromise.js.map