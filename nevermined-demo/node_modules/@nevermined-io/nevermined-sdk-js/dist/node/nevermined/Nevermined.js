"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Nevermined = void 0;
const Accounts_1 = require("./Accounts");
const Agreements_1 = require("./Agreements");
const Assets_1 = require("./Assets");
const Auth_1 = require("./Auth");
const NeverminedSecretStore_1 = require("./NeverminedSecretStore");
const Token_1 = require("./Token");
const Versions_1 = require("./Versions");
const Provenance_1 = require("./Provenance");
const Utils_1 = require("./utils/Utils");
const Metadata_1 = require("../metadata/Metadata");
const Gateway_1 = require("../gateway/Gateway");
const Keeper_1 = __importDefault(require("../keeper/Keeper"));
const Instantiable_abstract_1 = require("../Instantiable.abstract");
const Faucet_1 = require("../faucet/Faucet");
const Provider_1 = require("./Provider");
class Nevermined extends Instantiable_abstract_1.Instantiable {
    constructor() {
        super();
    }
    static getInstance(config) {
        return __awaiter(this, void 0, void 0, function* () {
            const instance = new Nevermined();
            const instanceConfig = Object.assign(Object.assign({}, Instantiable_abstract_1.generateIntantiableConfigFromConfig(config)), { nevermined: instance });
            instance.setInstanceConfig(instanceConfig);
            instance.keeper = yield Keeper_1.default.getInstance(instanceConfig);
            instance.gateway = new Gateway_1.Gateway(instanceConfig);
            instance.metadata = new Metadata_1.Metadata(instanceConfig);
            instance.faucet = new Faucet_1.Faucet(instanceConfig);
            instance.accounts = yield Accounts_1.Accounts.getInstance(instanceConfig);
            instance.auth = yield Auth_1.Auth.getInstance(instanceConfig);
            instance.assets = yield Assets_1.Assets.getInstance(instanceConfig);
            instance.agreements = yield Agreements_1.Agreements.getInstance(instanceConfig);
            instance.secretStore = yield NeverminedSecretStore_1.NeverminedSecretStore.getInstance(instanceConfig);
            instance.token = yield Token_1.Token.getInstance(instanceConfig);
            instance.versions = yield Versions_1.Versions.getInstance(instanceConfig);
            instance.provenance = yield Provenance_1.Provenance.getInstance(instanceConfig);
            instance.provider = yield Provider_1.Provider.getInstance(instanceConfig);
            instance.utils = yield Utils_1.Utils.getInstance(instanceConfig);
            return instance;
        });
    }
}
exports.Nevermined = Nevermined;
//# sourceMappingURL=Nevermined.js.map