import { Instantiable, InstantiableConfig } from '../Instantiable.abstract';
export declare enum PlatformTechStatus {
    Loading = "Loading",
    Unknown = "Unknown",
    Stopped = "Stopped",
    Working = "Working"
}
export interface PlatformTech {
    name: string;
    version?: string;
    commit?: string;
    status: PlatformTechStatus;
}
export interface PlatformKeeperTech extends PlatformTech {
    network?: string;
    keeperVersion?: string;
    contracts?: {
        [contractName: string]: string;
    };
}
export interface PlatformVersions {
    sdk: PlatformKeeperTech;
    metadata: PlatformTech;
    gateway: PlatformKeeperTech;
    status: {
        ok: boolean;
        contracts: boolean;
        network: boolean;
    };
}
export declare class Versions extends Instantiable {
    static getInstance(config: InstantiableConfig): Promise<Versions>;
    get(): Promise<PlatformVersions>;
}
