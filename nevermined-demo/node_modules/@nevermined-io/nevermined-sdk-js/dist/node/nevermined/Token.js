"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Token = void 0;
const Instantiable_abstract_1 = require("../Instantiable.abstract");
class Token extends Instantiable_abstract_1.Instantiable {
    static getInstance(config) {
        return __awaiter(this, void 0, void 0, function* () {
            const instance = new Token();
            instance.setInstanceConfig(config);
            return instance;
        });
    }
    getSymbol() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.nevermined.keeper.token.symbol();
        });
    }
    getName() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.nevermined.keeper.token.name();
        });
    }
    getTotalSupply() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.nevermined.keeper.token.totalSupply();
        });
    }
    transfer(to, amount, from) {
        return __awaiter(this, void 0, void 0, function* () {
            this.nevermined.keeper.token.transfer(to, amount, from.getId());
            return true;
        });
    }
    request(account, amount) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield account.requestTokens(amount);
                return true;
            }
            catch (e) {
                return false;
            }
        });
    }
}
exports.Token = Token;
//# sourceMappingURL=Token.js.map