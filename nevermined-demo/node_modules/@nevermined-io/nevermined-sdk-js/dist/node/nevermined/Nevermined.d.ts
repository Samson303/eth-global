import { Accounts } from './Accounts';
import { Agreements } from './Agreements';
import { Assets } from './Assets';
import { Auth } from './Auth';
import { NeverminedSecretStore } from './NeverminedSecretStore';
import { Token } from './Token';
import { Versions } from './Versions';
import { Provenance } from './Provenance';
import { Utils } from './utils/Utils';
import { Metadata } from '../metadata/Metadata';
import { Gateway } from '../gateway/Gateway';
import Keeper from '../keeper/Keeper';
import { Config } from '../models/Config';
import { Instantiable } from '../Instantiable.abstract';
import { Faucet } from '../faucet/Faucet';
import { Provider } from './Provider';
export declare class Nevermined extends Instantiable {
    static getInstance(config: Config): Promise<Nevermined>;
    keeper: Keeper;
    gateway: Gateway;
    metadata: Metadata;
    faucet: Faucet;
    accounts: Accounts;
    auth: Auth;
    assets: Assets;
    agreements: Agreements;
    secretStore: NeverminedSecretStore;
    provider: Provider;
    token: Token;
    versions: Versions;
    provenance: Provenance;
    utils: Utils;
    private constructor();
}
