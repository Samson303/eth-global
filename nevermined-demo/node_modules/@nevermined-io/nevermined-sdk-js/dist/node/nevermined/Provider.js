"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Provider = void 0;
const Instantiable_abstract_1 = require("../Instantiable.abstract");
class Provider extends Instantiable_abstract_1.Instantiable {
    static getInstance(config) {
        return __awaiter(this, void 0, void 0, function* () {
            const instance = new Provider();
            instance.setInstanceConfig(config);
            return instance;
        });
    }
    add(did, address, from) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.nevermined.keeper.didRegistry.addProvider(did, address, from.getId());
            return true;
        });
    }
    remove(did, address, from) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.nevermined.keeper.didRegistry.removeProvider(did, address, from.getId());
            return true;
        });
    }
    list(did) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.nevermined.keeper.didRegistry.getProviders(did);
        });
    }
}
exports.Provider = Provider;
//# sourceMappingURL=Provider.js.map