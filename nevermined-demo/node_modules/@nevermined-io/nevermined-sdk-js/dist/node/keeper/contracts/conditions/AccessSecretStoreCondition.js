"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessSecretStoreCondition = void 0;
const Condition_abstract_1 = require("./Condition.abstract");
const utils_1 = require("../../../utils");
class AccessSecretStoreCondition extends Condition_abstract_1.Condition {
    static getInstance(config) {
        return __awaiter(this, void 0, void 0, function* () {
            return Condition_abstract_1.Condition.getInstance(config, 'AccessSecretStoreCondition', AccessSecretStoreCondition);
        });
    }
    hashValues(did, grantee) {
        return super.hashValues(utils_1.didZeroX(did), utils_1.zeroX(grantee));
    }
    fulfill(agreementId, did, grantee, from) {
        return super.fulfill(agreementId, [utils_1.didZeroX(did), grantee].map(utils_1.zeroX), from);
    }
    checkPermissions(grantee, did, from) {
        return this.call('checkPermissions', [grantee, utils_1.didZeroX(did)].map(utils_1.zeroX), from);
    }
    getGrantedDidByConsumer(consumer) {
        return __awaiter(this, void 0, void 0, function* () {
            return (yield this.getPastEvents('Fulfilled', {
                _grantee: utils_1.zeroX(consumer)
            })).map(({ returnValues }) => ({
                did: utils_1.didPrefixed(returnValues._documentId),
                agreementId: utils_1.zeroX(returnValues._agreementId)
            }));
        });
    }
}
exports.AccessSecretStoreCondition = AccessSecretStoreCondition;
//# sourceMappingURL=AccessSecretStoreCondition.js.map