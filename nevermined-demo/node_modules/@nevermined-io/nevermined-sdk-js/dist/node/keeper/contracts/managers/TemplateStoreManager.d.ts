import ContractBase from '../ContractBase';
import { InstantiableConfig } from '../../../Instantiable.abstract';
export declare enum TemplateState {
    Uninitialized = 0,
    Proposed = 1,
    Approved = 2,
    Revoked = 3
}
export interface TemplateMetadata {
    state: TemplateState;
    owner: string;
    lastUpdatedBy: string;
    blockNumberUpdated: number;
}
export declare class TemplateStoreManager extends ContractBase {
    static getInstance(config: InstantiableConfig): Promise<TemplateStoreManager>;
    getOwner(): Promise<string>;
    proposeTemplate(address: string, from?: string, ignoreExists?: boolean): Promise<import("web3-core").TransactionReceipt>;
    approveTemplate(address: string, from?: string, ignoreApproved?: boolean): Promise<import("web3-core").TransactionReceipt>;
    revokeTemplate(address: string, from?: string): Promise<import("web3-core").TransactionReceipt>;
    getTemplate(templateId: string): Promise<TemplateMetadata>;
    isApproved(templateId: string): Promise<unknown>;
    getListSize(): Promise<unknown>;
}
